/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
        bool result = false;
        if(pRoot1!= nullptr && pRoot2!= nullptr){
            if( pRoot1->val == pRoot2->val)
                result = subtreeCore(pRoot1, pRoot2);
            if (!result)
                result = HasSubtree(pRoot1->left, pRoot2);
            if(!result)
                result = HasSubtree(pRoot1->right, pRoot2);
        }
        return result;
    }
    bool subtreeCore(TreeNode * tree1 , TreeNode* tree2){
        if (tree2 == nullptr) return true;
        if (tree1 == nullptr) return false;
        if ( tree1->val != tree2->val ) return false;
        
        return subtreeCore(tree1->left, tree2->left) && subtreeCore(tree1->right, tree2->right);
    }
};
